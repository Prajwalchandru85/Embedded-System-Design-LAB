//to input an expression of the type  A operator B =, from the key board, where A and B are the  single digit BCD numbers and operator may be + or - .Display the result on the LCD
#include<lpc17xx.h>
#include<string.h>
#include<stdio.h>
void delay(int k){int i; for(i=0; i<k; i++);}
int read(){
	int a, b, i, j, k, x, y, row, col, t;
	for(i=0; ; i=(i+1)%4){
		LPC_GPIO2->FIOPIN=1<<(i+10);
		x=(LPC_GPIO1->FIOPIN>>23)&15;
		//find keycode and return
		if(x){
			for(col=0; x; x=x>>1, col++);
			return 4*i+col;
		}
	}
}

void port_write(int ascii, int isData){
//0.23-26 for data, 0.27 for RS, 0.28 for enable
	LPC_PINCON->PINSEL1=0;
	LPC_GPIO0->FIODIR=15<<23|1<<27|1<<28;
	//data, rs, enable edge
	LPC_GPIO0->FIOPIN=ascii<<23;
	LPC_GPIO0->FIOMASK=0XF7FFFFFF;
	LPC_GPIO0->FIOPIN=isData<<27;
	LPC_GPIO0->FIOMASK=0;
	LPC_GPIO0->FIOSET=1<<28;
	delay(25);
	LPC_GPIO0->FIOCLR=1<<28;
	delay(3000000);
}
void lcd_write(int ascii, int do4bit, int isData){
	port_write(ascii>>4, isData);
	if(!do4bit) port_write(ascii&15, isData);
}

void lcd_display(char* str){
	int a, b, i, j, k, x, y, row, col, t, n;
	int isData=0, do4bit=1;
	int lcd_init[]={0x30, 0x30, 0x30, 0x20,
		0x28, 0x0c, 0x01, 0x80, 0x06};
	isData=0;
	for(i=0; i<sizeof(lcd_init)/sizeof(int); i++){
		lcd_write(lcd_init[i], do4bit=(lcd_init[i]==0x30|lcd_init[i]==0x20)?1:0, isData);
	}
		
	isData=1; do4bit=0;
	for(i=0; str[i]; i++){
		lcd_write(str[i], do4bit, isData);
}


}

int main(){
	int a, b, i, j, k, x, y, row, col, t, n;
	char str[10];//="hello";
	SystemInit();
	SystemCoreClockUpdate();
	
	//read a and b from keyboard
	//calculate result
	//display it on lcd

	 //keyboard pins
	//row 2.10 to 2.13
	//col 1.23 to 1.26
	LPC_PINCON->PINSEL3=0;
	LPC_PINCON->PINSEL4=0;
	LPC_GPIO1->FIODIR=0<<10;
	LPC_GPIO2->FIODIR=15<<10;
	
	//read a then b; then send to lcd_display as string
	while(1){


	a=read();
	b=read();
		//lcd_display(sprintf(str, "%d", a));

	sprintf(str, "%d", a+b);
	lcd_display(str);
	}
	
	return 0;
}